# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
    vmImage: 'VS2017-Win2016'

variables:
  - group: SharedVariables  
# group needs a spacing befor - !!!!!!!!!!!!!!!!!!!!! otherwise the variable group is NOT recognized
## Release pipe (need a Azure CLI task - task version 2.* - otherwise no multiline executed)  az aks get-credentials --resource-group AZExtensive --name AZExtensive | kubectl set image deployment.v1.apps/azapi azapi=tudordumitriu/azapi:$(buildno)
steps:
# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       echo "##vso[task.setvariable variable=funcbuildno]($(Build.BuildNumber).ToString()).replace('.', '')"
# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |    
#       Write-Host 'Building azfunctions:' + '$(System.TeamFoundationCollectionUri)'  + ':' + $(funcbuildno)
#       az extension add --name azure-devops
#       echo $(System.AccessToken) | az devops login
#       az devops configure -d organization=$(System.TeamFoundationCollectionUri) project=$(System.TeamProject)       
#       az pipelines variable-group variable update --id 1 --name funcbuildno --value $(funcbuildno)
- script: |
    dotnet restore
    dotnet build --configuration Release
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output publish_output'
    projects: '*.csproj'
    publishWebProjects: false
    modifyOutputPath: true
    zipAfterPublish: false
- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output/s"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build.zip"
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build.zip'
    artifactName: 'drop'
    
# pool: $(funcbuildno)
#   vmImage: 'ubuntu-latest'

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
